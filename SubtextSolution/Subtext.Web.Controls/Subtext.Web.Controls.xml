<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Subtext.Web.Controls</name>
    </assembly>
    <members>
        <member name="T:Subtext.Web.Controls.CollapseLinkStyle">
            <summary>
            Various styles of collapsing this panel.
            </summary>
        </member>
        <member name="T:Subtext.Web.Controls.CollapsiblePanel">
            <summary>
            Panel that can be expanded and collapsed.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.CollapsiblePanel.#ctor">
            <summary>
            Creates a new <see cref="T:Subtext.Web.Controls.CollapsiblePanel"/> instance.  
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.CollapsiblePanel.OnPreRender(System.EventArgs)">
            <summary>
            Registers the client script if this is collapsible.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.LinkStyle">
            <summary>
            Gets or sets the link style.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.LinkTextCollapsed">
            <summary>
            Gets or sets the link text displayed when collapsed.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.BodyCssClass">
            <summary>
            Gets or sets the body CSS class.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.Collapsed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Subtext.Web.Controls.CollapsiblePanel"/> is collapsed.
            </summary>
            <value>
            	<c>true</c> if collapsed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.DisplayHeader">
            <summary>
            Gets or sets a value indicating whether to display the header.
            </summary>
            <value>
            	<c>true</c> if header is to be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.HeaderCssClass">
            <summary>
            Gets or sets the header CSS class.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.HeaderText">
            <summary>
            Gets or sets the header text.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.HeaderTextCssClass">
            <summary>
            Gets or sets the header text CSS class.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.Collapsible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Subtext.Web.Controls.CollapsiblePanel"/> is collapsible.
            </summary>
            <value>
            	<c>true</c> if collapsible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.LinkBeforeHeader">
            <summary>
            Gets or sets a value indicating whether the link goes before the header.
            </summary>
            <value>
            	<c>true</c> if the link goes before the header; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.LinkCssClass">
            <summary>
            Gets or sets the link CSS class.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.CollapsiblePanel.LinkImage">
            <summary>
            Gets or sets the link image.
            </summary>
            <value></value>
        </member>
        <member name="T:Subtext.Web.Controls.ContentRegion">
            <summary>
            The MasterPage controls (MasterPage and ContentRegion) are almost entirely based off 
            of Paul Wilson's excellent demo found
            here: http://authors.aspalliance.com/paulwilson/Articles/?id=14
            Very MINOR changes were made here. Thanks Paul.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.ContentRegion.#ctor">
            <summary>
            Creates a new <see cref="T:Subtext.Web.Controls.ContentRegion"/> instance.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.ContentRegion.OnInit(System.EventArgs)">
            <summary>
            Initializes this Content Region.
            </summary>
            <param name="e">E.</param>
        </member>
        <member name="M:Subtext.Web.Controls.ContentRegion.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the begin tag. In this case, a no-op.
            </summary>
            <param name="writer">Writer.</param>
        </member>
        <member name="M:Subtext.Web.Controls.ContentRegion.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the end tag.  In this case, a no-op.
            </summary>
            <param name="writer">Writer.</param>
        </member>
        <member name="T:Subtext.Web.Controls.ControlHelper">
            <summary>
            Static class containing helper methods for various controls 
            that can't be placed within the control hierarchy.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.ControlHelper.ExpandTildePath(System.String)">
            <summary>
            If the URL is is the format ~/SomePath, this 
            method expands the tilde using the app path.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Subtext.Web.Controls.ControlHelper.IsAttributeDefined(System.Web.UI.HtmlControls.HtmlControl,System.String)">
            <summary>
            Returns true if the specified attribute is defined 
            on the control.
            </summary>
            <param name="control">Control.</param>
            <param name="name">Name.</param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Web.Controls.ControlHelper.IsAttributeDefined(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            Returns true if the specified attribute is defined 
            on the control.
            </summary>
            <param name="control">Control.</param>
            <param name="name">Name.</param>
            <returns></returns>
        </member>
        <member name="T:Subtext.Web.Controls.HelpToolTip">
            <summary>
            Renders a clickable help tooltip.  This class does not embed the 
            necessary scripts and CSS (against the general practice). Instead, 
            it relies on the user having declared helptooltip.js and helptooltip.css.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.HelpToolTip.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            <p>Renders this tool tip.  The format looks like: 
            &lt;a class="helplink" onclick="showHelpTip(event, 'help text'); 
            return false;" href="?"&gt;Label Text&lt;a&gt;
            </p>
            //TODO: Look into embedding helplink.js and helplink.css
            </summary>
            <param name="writer">Writer.</param>
        </member>
        <member name="P:Subtext.Web.Controls.HelpToolTip.HelpText">
            <summary>
            Gets or sets the Help Text.  This is the 
            text displayed when clicking on the tooltip.
            </summary>
            <value></value>
        </member>
        <member name="T:Subtext.Web.Controls.MasterPage">
            <summary>
            The MasterPage controls (MasterPage and ContentRegion) are almost entirely based off 
            of Paul Wilson's excellent demo found
            here: http://authors.aspalliance.com/paulwilson/Articles/?id=14
            Very MINOR changes were made here. Thanks Paul.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.MasterPage.#ctor">
            <summary>
            Creates a new <see cref="T:Subtext.Web.Controls.MasterPage"/> instance.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.MasterPage.OnInit(System.EventArgs)">
            <summary>
            Builds the master page and contents.
            </summary>
            <param name="e">E.</param>
        </member>
        <member name="M:Subtext.Web.Controls.MasterPage.AddParsedSubObject(System.Object)">
            <summary>
            Method called when an HTML or XML element has been parsed 
            and is being added to the controls collection.
            </summary>
            <remarks>
            In our case, content regions are added to a private collection of items. 
            Other controls are added to the controls collection for the defaults.
            </remarks>
            <param name="obj"></param>
        </member>
        <member name="M:Subtext.Web.Controls.MasterPage.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the begin tag. In this case, a no-op.
            </summary>
            <param name="writer">Writer.</param>
        </member>
        <member name="M:Subtext.Web.Controls.MasterPage.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the end tag.  In this case, a no-op.
            </summary>
            <param name="writer">Writer.</param>
        </member>
        <member name="P:Subtext.Web.Controls.MasterPage.DefaultContent">
            <summary>
            Cotnrol ID for the default content
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.MasterPage.TemplateFile">
            <summary>
            Gets or sets the path to the template user control.
            </summary>
            <value></value>
        </member>
        <member name="T:Subtext.Web.Controls.MenuItem">
            <summary>
            Simple control used to render an anchor tag surrounded by a list item tag 
            for purposes of creating a menu.  It will not render an HREF when the HREF 
            points to the same page this page references.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.MenuItem.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders this menu item.
            </summary>
            <param name="writer">Writer.</param>
        </member>
        <member name="P:Subtext.Web.Controls.MenuItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.MenuItem.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.MenuItem.HighlightCssClass">
            <summary>
            Gets or sets the CSS used to highlight this item.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.MenuItem.Href">
            <summary>
            Gets or sets the href.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.MenuItem.IsOnThisMenusPage">
            <summary>
            Returns true if the current request corresponds to this menu 
            item's page.  This tells us whether or not this control should 
            be rendered as a link.
            </summary>
            <value>
            	<c>true</c> if [is on this menus page]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Subtext.Web.Controls.ScriptHelper">
            <summary>
            Contains helper methods for unpacking scripts 
            embedded as assembly resources.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.ScriptHelper.UnpackScript(System.String)">
            <summary>
            Returns a string representation of the specified embedded 
            script file.  The script is wrapped with script start and end tags 
            and assumes the script language is "vbscript" if the file extension 
            is ".vbs" and "javascript" otherwise.
            </summary>
            <remarks>
            Using a naming convention, all scripts are placed in the Resources\Scripts 
            folder. The scriptName should just be the filename of the script.  For example, 
            if you embed a file at the following location "Resources\Scripts\MyScript.js", 
            the scriptName to pass is "MyScript.js".
            </remarks>
            <param name="scriptName">FileName of the script.  Just the file name.</param>
            <returns>Contents of the script.</returns>
        </member>
        <member name="M:Subtext.Web.Controls.ScriptHelper.UnpackScript(System.String,System.String)">
            <summary>
            Returns a string representation of the specified embedded 
            script file.  The script is wrapped with script start and end tags 
            and assumes the script language is "javascript".
            </summary>
            <remarks>
            Using a naming convention, all scripts are placed in the Resources\Scripts 
            folder. The scriptName should just be the filename of the script.  For example, 
            if you embed a file at the following location "Resources\Scripts\MyScript.js", 
            the scriptName to pass is "MyScript.js".
            </remarks>
            <param name="scriptName">FileName of the script.  Just the file name.</param>
            <param name="scriptLanguage">The script language.</param>
            <returns>Contents of the script.</returns>
        </member>
        <member name="M:Subtext.Web.Controls.ScriptHelper.UnpackEmbeddedResourceToString(System.String)">
            <summary>
            Unpacks the embedded resource to string.
            </summary>
            <param name="resourceName">Name of the resource.</param>
            <returns></returns>
        </member>
        <member name="T:Subtext.Web.Controls.ScriptTag">
            <summary>
            This is used to render a client side script tag using the 
            the ~/ syntax for the script path.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.ScriptTag.#ctor">
            <summary>
            Creates a new <see cref="T:Subtext.Web.Controls.ScriptTag"/> instance.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.ScriptTag.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders this script tag.
            </summary>
            <param name="writer">Writer.</param>
        </member>
        <member name="P:Subtext.Web.Controls.ScriptTag.Src">
            <summary>
            Gets or sets the SRC, the path to the script file.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.ScriptTag.Language">
            <summary>
            Gets or sets the language of the script.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Web.Controls.ScriptTag.TagName">
            <summary>
            Gets the name of the tag.
            </summary>
            <value></value>
        </member>
        <member name="T:Subtext.Web.Controls.StringHelper">
            <summary>
            Static class with useful string manipulation methods.
            </summary>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.AreEqual(System.String,System.String,System.Boolean)">
            <summary>
            Compares the strings and returns true if they are equal.
            </summary>
            <param name="source">Source.</param>
            <param name="compared">Compared.</param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.AreEqualIgnoringCase(System.String,System.String)">
            <summary>
            Compares the strings and returns true if they are equal, ignoring case.
            </summary>
            <param name="source">Source.</param>
            <param name="compared">Compared.</param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.SplitUpperCase(System.String)">
            <summary>
            Parses a camel cased or pascal cased string and returns an array 
            of the words within the string.
            </summary>
            <example>
            The string "PascalCasing" will return an array with two 
            elements, "Pascal" and "Casing".
            </example>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.SplitUpperCaseToString(System.String)">
            <summary>
            Parses a camel cased or pascal cased string and returns a new 
            string with spaces between the words in the string.
            </summary>
            <example>
            The string "PascalCasing" will return an array with two 
            elements, "Pascal" and "Casing".
            </example>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.Left(System.String,System.Int32)">
            <summary>
            Returns a string containing a specified number of characters from the left side of a string.
            </summary>
            <param name="str">Required. String expression from which the leftmost characters are returned.</param>
            <param name="length">Required. Integer greater than 0. Numeric expression 
            indicating how many characters to return. If 0, a zero-length string ("") 
            is returned. If greater than or equal to the number of characters in Str, 
            the entire string is returned. If str is null, this returns null.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if length is less than 0</exception>
            <exception cref="T:System.NullReferenceException">Thrown if str is null.</exception>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.Right(System.String,System.Int32)">
            <summary>
            Returns a string containing a specified number of characters from the right side of a string.
            </summary>
            <param name="str">Required. String expression from which the rightmost characters are returned.</param>
            <param name="length">Required. Integer greater than 0. Numeric expression 
            indicating how many characters to return. If 0, a zero-length string ("") 
            is returned. If greater than or equal to the number of characters in Str, 
            the entire string is returned. If str is null, this returns null.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if length is less than 0</exception>
            <exception cref="T:System.NullReferenceException">Thrown if str is null.</exception>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.RightAfter(System.String,System.String)">
            <summary>
            Returns a string containing every character within a string after the 
            first occurrence of another string.
            </summary>
            <param name="str">Required. String expression from which the rightmost characters are returned.</param>
            <param name="searchString">The string where the end of it marks the 
            characters to return.  If the string is not found, the whole string is 
            returned.</param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException">Thrown if str or searchstring is null.</exception>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.RightAfter(System.String,System.String,System.Boolean)">
            <summary>
            Returns a string containing every character within a string after the 
            first occurrence of another string.
            </summary>
            <param name="str">Required. String expression from which the rightmost characters are returned.</param>
            <param name="searchString">The string where the end of it marks the 
            characters to return.  If the string is not found, the whole string is 
            returned.</param>
            <param name="caseSensitive">Default true: If true, uses case sensitive search.</param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException">Thrown if str or searchstring is null.</exception>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.LeftBefore(System.String,System.String)">
            <summary>
            Returns a string containing every character within a string before the 
            first occurrence of another string.
            </summary>
            <param name="str">Required. String expression from which the leftmost characters are returned.</param>
            <param name="searchString">The string where the beginning of it marks the 
            characters to return.  If the string is not found, the whole string is 
            returned.</param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException">Thrown if str or searchstring is null.</exception>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.LeftBefore(System.String,System.String,System.Boolean)">
            <summary>
            Returns a string containing every character within a string before the 
            first occurrence of another string.
            </summary>
            <param name="str">Required. String expression from which the leftmost characters are returned.</param>
            <param name="searchString">The string where the beginning of it marks the 
            characters to return.  If the string is not found, the whole string is 
            returned.</param>
            <param name="caseSensitive">Default true: If true, uses case sensitive search.</param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException">Thrown if str or searchstring is null.</exception>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Returns true if the specified string to be searched starts with 
            the specified prefix in a culturally invariant manner.
            </summary>
            <param name="searched">The string to check its start.</param>
            <param name="prefix">The string to search for at the beginning of the searched string.</param>
            <param name="ignoreCase">Ignore case.</param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Returns true if the specified string to be searched ends with 
            the specified prefix in a culturally invariant manner.
            </summary>
            <param name="searched">The string to check its end.</param>
            <param name="suffix">The string to search for at the end of the searched string.</param>
            <param name="ignoreCase">Ignore case.</param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Web.Controls.StringHelper.IndexOf(System.String,System.String,System.Boolean)">
            <summary>
            Returns the index of the first string within the second.
            </summary>
            <param name="container">Container.</param>
            <param name="contained">Contained.</param>
            <param name="caseSensitive">Case sensitive.</param>
            <returns></returns>
        </member>
    </members>
</doc>
