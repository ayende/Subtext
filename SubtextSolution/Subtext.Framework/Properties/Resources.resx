<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Argument_StringZeroLength" xml:space="preserve">
    <value>String cannot be of zero length.</value>
  </data>
  <data name="ArgumentNull_Array" xml:space="preserve">
    <value>Array cannot be null.</value>
  </data>
  <data name="ArgumentNull_ArrayElement" xml:space="preserve">
    <value>At least one element in the specified array was null.</value>
  </data>
  <data name="ArgumentNull_ArrayValue" xml:space="preserve">
    <value>Found a null value within an array.</value>
  </data>
  <data name="ArgumentNull_Assembly" xml:space="preserve">
    <value>Assembly cannot be null.</value>
  </data>
  <data name="ArgumentNull_AssemblyName" xml:space="preserve">
    <value>AssemblyName cannot be null.</value>
  </data>
  <data name="ArgumentNull_AssemblyNameName" xml:space="preserve">
    <value>AssemblyName.Name cannot be null or an empty string.</value>
  </data>
  <data name="ArgumentNull_Buffer" xml:space="preserve">
    <value>Buffer cannot be null.</value>
  </data>
  <data name="ArgumentNull_Collection" xml:space="preserve">
    <value>Collection cannot be null.</value>
  </data>
  <data name="ArgumentNull_Dictionary" xml:space="preserve">
    <value>Dictionary cannot be null.</value>
  </data>
  <data name="ArgumentNull_FileName" xml:space="preserve">
    <value>File name cannot be null.</value>
  </data>
  <data name="ArgumentNull_Generic" xml:space="preserve">
    <value>Value cannot be null.</value>
  </data>
  <data name="ArgumentNull_Graph" xml:space="preserve">
    <value>Object Graph cannot be null.</value>
  </data>
  <data name="ArgumentNull_GUID" xml:space="preserve">
    <value>GUID cannot be null.</value>
  </data>
  <data name="ArgumentNull_Key" xml:space="preserve">
    <value>Key cannot be null.</value>
  </data>
  <data name="ArgumentNull_NullMember" xml:space="preserve">
    <value>Member at position {0} was null.</value>
  </data>
  <data name="ArgumentNull_Obj" xml:space="preserve">
    <value>Object cannot be null.</value>
  </data>
  <data name="ArgumentNull_Path" xml:space="preserve">
    <value>Path cannot be null.</value>
  </data>
  <data name="ArgumentNull_Provider" xml:space="preserve">
    <value>Provider cannot be null</value>
  </data>
  <data name="ArgumentNull_Stream" xml:space="preserve">
    <value>Stream cannot be null.</value>
  </data>
  <data name="ArgumentNull_String" xml:space="preserve">
    <value>String reference not set to an instance of a String.</value>
  </data>
  <data name="ArgumentNull_Type" xml:space="preserve">
    <value>Type cannot be null.</value>
  </data>
  <data name="ArgumentNull_Uri" xml:space="preserve">
    <value>URI cannot be null.</value>
  </data>
  <data name="ArgumentNull_WithParamName" xml:space="preserve">
    <value>Parameter '{0}' cannot be null.</value>
  </data>
  <data name="InvalidOperation_DestroyActiveComment" xml:space="preserve">
    <value>Cannot destroy an active comment.</value>
  </data>
  <data name="InvalidOperation_DestroyApprovedComment" xml:space="preserve">
    <value>Cannot destroy an approved comment. Please flag it as spam or trash it first.</value>
  </data>
  <data name="Argument_SemaphoreCountLessThanZero" xml:space="preserve">
    <value>Semaphore must have a count of at least 0.</value>
  </data>
  <data name="TimeoutWaitingForLock" xml:space="preserve">
    <value>Timeout waiting for lock</value>
  </data>
  <data name="InvalidOperation_WaitTimeLessThanZero" xml:space="preserve">
    <value>We'd all like to be able to go back in time, but this is not allowed. Please choose a positive wait time.</value>
  </data>
  <data name="InvalidOperation_HostRecordExists" xml:space="preserve">
    <value>Cannot create a Host record.  One already exists.</value>
  </data>
  <data name="Format_InvalidFeedburnerName" xml:space="preserve">
    <value>Cannot specify a feedburner name with invalid characters.</value>
  </data>
  <data name="ExtendedPropertiesOverflow_Generic" xml:space="preserve">
    <value>ExtendedProperties bytes overflow. The ExtendedProperties is limited to 7800 bytes</value>
  </data>
  <data name="BlogRequiresSubfolder_Generic" xml:space="preserve">
    <value>Sorry, but there {0} with the specified hostname '{1}'.  To set up another blog with the same hostname, you must provide an subfolder name.  Please click on 'Host Domain' below for more information.</value>
  </data>
  <data name="IsAnotherBlog" xml:space="preserve">
    <value>is another blog</value>
  </data>
  <data name="AreBlogs" xml:space="preserve">
    <value>are {0} blogs</value>
  </data>
  <data name="Format_BadDateTime" xml:space="preserve">
    <value>String was not recognized as a valid DateTime.</value>
  </data>
  <data name="NotImplementedException_Generic" xml:space="preserve">
    <value>The method or operation is not implemented.</value>
  </data>
  <data name="ApplicationException_UnknownHandlerType" xml:space="preserve">
    <value>Invalid HandlerType: Unknown</value>
  </data>
  <data name="Format_InvalidBlogId" xml:space="preserve">
    <value>Invalid blog id '{0}' specified</value>
  </data>
  <data name="TotalRecords" xml:space="preserve">
    <value>TotalRecords</value>
  </data>
  <data name="Format_InvalidPostId" xml:space="preserve">
    <value>Invalid Post ID.</value>
  </data>
  <data name="Configuration_KeyNotFound" xml:space="preserve">
    <value>No connection string matches the key '{0}'.</value>
  </data>
  <data name="HttpException_MissingAttribute" xml:space="preserve">
    <value>Missing attribute '{0}'.</value>
  </data>
  <data name="SecurityException_RoleExists" xml:space="preserve">
    <value>Role exists</value>
  </data>
  <data name="ArgumentOutOfRange_IndexLength" xml:space="preserve">
    <value>Index and length must refer to a location within the string.</value>
  </data>
  <data name="ArgumentOutOfRange_StartIndex" xml:space="preserve">
    <value>StartIndex cannot be less than zero.</value>
  </data>
  <data name="ArgumnetOutOfRange_Length" xml:space="preserve">
    <value>Length cannot be less than zero.</value>
  </data>
  <data name="TrackbackTag" xml:space="preserve">
    <value>&lt;!--
   &lt;rdf:RDF 
      xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
      xmlns:dc="http://purl.org/dc/elements/1.1/"
      xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"&gt;

      &lt;rdf:Description
         rdf:about="{0}"
         dc:identifier="{1}"
         dc:title="{2}"
         trackback:ping="{3}services/trackbacks/{4}.aspx" 
      /&gt;
   &lt;/rdf:RDF&gt;
--&gt;</value>
  </data>
</root>